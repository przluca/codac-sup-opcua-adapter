#+======================================================================
# $HeadURL$
# $Id$
#
# Project       : CODAC Core System
#
# Description   : sdn-pub Makefile
#
# Author        : This file was generated by CODAC development toolkit
#
# Copyright (c) : 2010-2019 ITER Organization,
#                 CS 90 046
#                 13067 St. Paul-lez-Durance Cedex
#                 France
#
# This file is part of ITER CODAC software.
# For the terms and conditions of redistribution or use of this software
# refer to the file ITER-LICENSE.TXT located in the top level directory
# of the distribution package.
#
#-======================================================================

PROGNAME=obj-factory

LIBRARIES := rt pthread dl
LIBRARIES += ccs-common ccs-base
LIBRARIES += sdn-core
LIBRARIES += sup-core

LIBRARY_DIRS := ../../../../target/lib
LIBRARY_DIRS += $(CODAC_ROOT)/lib

INCLUDE_DIRS := . ../core
INCLUDE_DIRS += $(CODAC_ROOT)/include

TARGET=../../../../target
SOURCE_DIR=.
BINARY_DIR=$(TARGET)/bin
## Bug 10805 - Coverage report handled through MVN
#OBJECT_DIR=$(TARGET)/obj/$(PROGNAME)
OBJECT_DIR=$(SOURCE_DIR)/.obj

EXECUTABLE=$(BINARY_DIR)/$(PROGNAME)
INCLUDES=$(foreach inc,$(INCLUDE_DIRS),-I$(inc))
LDLIBS=$(foreach libs,$(LIBRARY_DIRS),-L$(libs) -Wl,-rpath,$(libs)) $(foreach libs,$(LIBRARIES),-l$(libs))
SOURCES=$(SOURCE_DIR)/$(PROGNAME).cpp 
# to build executable from all sources in the program directory:
#SOURCES=$(wildcard $(SOURCE_DIR)/*.cpp $(SOURCE_DIR)/*.c)
OBJECTS=$(addprefix $(OBJECT_DIR)/,$(patsubst %.cpp,%.o,$(notdir $(SOURCES))))

CC=g++
# Compile against libxml2
CCFLAGS := -fPIC -c -Wall -std=c++11 -g `xml2-config --cflags`
# Link against libxml2
LDFLAGS := `xml2-config --libs`

## Bug 10805 - Coverage report handled through MVN
ifeq ($(COVERAGE),true)
CCFLAGS += -DDEBUG -O0 -g -fprofile-arcs -ftest-coverage -fno-inline -fno-inline-small-functions -fno-default-inline --coverage
LDFLAGS += --coverage
endif

.PHONY: all clean run

all: $(SOURCES) $(EXECUTABLE)

clean:
	rm -rf "$(EXECUTABLE)" "$(OBJECT_DIR)"

run: $(SOURCES) $(EXECUTABLE)
	$(EXECUTABLE)

$(EXECUTABLE): $(OBJECTS)
	mkdir -p $(BINARY_DIR)
	$(CC) $(LDFLAGS) $(LDLIBS) $(OBJECTS) -o $@

$(OBJECT_DIR)/%.o: $(SOURCE_DIR)/%.cpp
	mkdir -p $(OBJECT_DIR)
	$(CC) $(CCFLAGS) $(INCLUDES) $< -o $@


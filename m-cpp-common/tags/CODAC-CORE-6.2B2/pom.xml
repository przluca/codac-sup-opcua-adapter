<!--
 $HeadURL: https://svnpub.iter.org/codac/iter/codac/dev/units/m-cpp-common/tags/CODAC-CORE-6.2B2/pom.xml $
 $Id: pom.xml 103282 2019-10-15 15:11:08Z bauvirb $

 Project       : CODAC Core System

 Description   : Project description file for a CODAC Core System module

 Authors       : This file was generated by CODAC development toolkit
 
 Copyright (c) : 2010-2019 ITER Organization,
                 CS 90 046
                 13067 St. Paul-lez-Durance Cedex
                 France

 This file is part of ITER CODAC software.
 For the terms and conditions of redistribution or use of this software
 refer to the file ITER-LICENSE.TXT located in the top level directory
 of the distribution package.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.iter.codac.units</groupId>
    <artifactId>cpp-common</artifactId>
    <packaging>codac</packaging>
    <!-- See ChangeLog file for details -->
    <version>1.4.7</version>
    <name>CODAC Core System cpp-common module</name>
    <description>CODAC Core System C++ foundation classes</description>
    <url>http://www.iter.org/</url>
 
    <!-- project properties -->
    <properties>
        <unit.type>module</unit.type>
        <integrity.level>1</integrity.level>
        <cppcheck.args>--enable=all --suppress=missingIncludeSystem --inline-suppr</cppcheck.args>
        <rpm.release.num>1</rpm.release.num>
    </properties>

    <!-- parent pom.xml -->
    <parent>
        <groupId>org.iter.codac.units</groupId>
        <artifactId>maven-iter-settings</artifactId>
        <version>6.2.0</version>
    </parent>

    <!-- unit owner and developers -->
    <developers>
        <developer>
            <id>bauvirb</id>
            <name>Bertrand Bauvir</name>
            <organization>ITER Organisation</organization>
            <email>bertrand.bauvir@iter.org</email>
            <roles>
                <role>unit owner</role>
                <role>developer</role>
            </roles>
        </developer>
        <developer>
            <id>vanherw</id>
            <name>Walter Van Herck</name>
            <organization>ITER Organisation</organization>
            <email>walter.vanherck@iter.org</email>
            <roles>
                <role>developer</role>
            </roles>
        </developer>
    </developers>

    <!-- configuration of how the project is built -->
    <build>
        <!-- default phase is compile -->
        <defaultGoal>compile</defaultGoal>
        <!-- this command is executed if you just write 'mvn' -->
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-iter-plugin</artifactId>
                <extensions>true</extensions>
                <configuration>
                    <packaging>
                        <package>
                            <!-- Library, etc. -->
                            <include type="file" source="lib" target="lib">
                                <include>libccs-common.so.*</include>
                                <include>libccs-base.so.*</include>
                                <include>libccs-types.so.*</include>
                                <include>libccs-core.so.*</include>
                            </include>
                            <!-- Programs -->
<!--
                            <include type="file" source="bin" target="bin">
                                <include>mcast-forward</include>
                            </include>
-->
                            <!-- Package dependencies -->
                        </package>
                        <package name="devel">
                            <!-- Library, etc. -->
                            <include type="file" source="lib" target="lib">
                                <include>*.a</include>
                            </include>
                            <include type="file" source="lib" target="lib">
                                <include>*.so</include>
                            </include>
                            <!-- Common C++ type definition -->
                            <include type="file" source="main/c++/include" target="include/common">
                                <include>types.h</include>
                            </include>
                            <!-- Useful wrappers, misc. helper routines, etc. -->
                            <include type="file" source="main/c++/common" target="include/common">
                                <include>log-api.h</include>
                                <include>log-wrap.h</include>
                            </include>
                            <include type="file" source="main/c++/tools" target="include/common">
                                <include>Base64.h</include>
                                <include>CyclicRedundancyCheck.h</include>
                                <include>Hash.h</include>
                                <include>NetTools.h</include>
                                <include>SquareRoot.h</include>
                                <include>SysTools.h</include>
                                <include>TimeTools.h</include>
                            </include>
                            <!--<include type="file" source="main/c++/include/crc.h" target="include/common/crc.h"/>--> <!-- Maintained for backward compatibility -->
                            <!--<include type="file" source="main/c++/include/hash.h" target="include/common/hash.h"/>--> <!-- Maintained for backward compatibility -->
                            <include type="file" source="main/c++/include/tools.h" target="include/common/tools.h"/> <!-- Maintained for backward compatibility -->
                            <include type="file" source="main/c++/include/net-tools.h" target="include/common/net-tools.h"/>
                            <!-- Basic classes -->
                            <include type="file" source="main/c++/types" target="include/common">
                                <!-- ccs::types namespace -->
                                <include>AnyType.h</include>
                                <include>ArrayType.h</include>
                                <include>BasicTypes.h</include>
                                <include>CompoundType.h</include>
                                <include>ScalarType.h</include>
                                <include>UnionType.h</include>
                                <include>CompoundArray.h</include>
                                <include>ScalarArray.h</include>
                                <include>AnyValue.h</include>
                                <include>AnyTypeDatabase.h</include>
                                <include>AnyTypeHelper.h</include>
                                <include>AnyValueHelper.h</include>
                            </include>
                            <include type="file" source="main/c++/base" target="include/common">
                                <!-- ccs::base namespace -->
                                <include>LookUpTable.h</include>
                                <include>BlockMemoryBuffer.h</include>
                                <include>BlockMemoryFIFO.h</include>
                                <include>Buffer.h</include>
                                <include>CircularBuffer.h</include>
                                <include>FIFOBuffer.h</include>
                                <include>HIFOBuffer.h</include>
                                <include>LIFOBuffer.h</include>
                                <include>Lock.h</include>
                                <include>AtomicLock.h</include>
                                <include>SemLock.h</include>
                                <include>Statistics.h</include>
                                <include>AnyObject.h</include>
                                <include>ObjectDatabase.h</include>
                                <include>ObjectFactory.h</include>
                                <include>AnyThread.h</include>
                            </include>
                            <include type="file" source="main/c++/include/buffer.h" target="include/common/buffer.h"/> <!-- Maintained for backward compatibility -->
                            <include type="file" source="main/c++/include/lock.h" target="include/common/lock.h"/> <!-- Maintained for backward compatibility -->
                            <include type="file" source="main/c++/include/lu-table.h" target="include/common/lu-table.h" />
                            <include type="file" source="main/c++/include/statistics.h" target="include/common/statistics.h"/> <!-- Maintained for backward compatibility -->
                            <include type="file" source="main/c++/include/any-object.h" target="include/common/any-object.h"/> <!-- Maintained for backward compatibility -->
                            <include type="file" source="main/c++/include/any-thread.h" target="include/common/any-thread.h"/> <!-- Maintained for backward compatibility -->
			    <!-- Package dependencies -->
                            <requires version="current">%{codac_rpm_prefix}-${project.artifactId}</requires>
                        </package>
                        <package name="doc">
                            <include type="doxygen">
                                <outputformat>html</outputformat>
                                <!--<outputformat>pdf</outputformat>-->
                                <!-- ccs::types namespace -->
                                <input>main/c++/types/AnyType.h</input>
                                <input>main/c++/types/ArrayType.h</input>
                                <input>main/c++/types/BasicTypes.h</input>
                                <input>main/c++/types/CompoundType.h</input>
                                <input>main/c++/types/ScalarType.h</input>
                                <input>main/c++/types/UnionType.h</input>
                                <input>main/c++/types/CompoundArray.h</input>
                                <input>main/c++/types/ScalarArray.h</input>
                                <input>main/c++/types/AnyValue.h</input>
                                <input>main/c++/types/AnyTypeHelper.h</input>
                                <input>main/c++/types/AnyValueHelper.h</input>
                                <input>main/c++/types/AnyTypeDatabase.h</input>
                                <!-- ccs::base namespace -->
                                <input>main/c++/base/LookUpTable.h</input>
                                <input>main/c++/base/Lock.h</input>
                                <input>main/c++/base/AtomicLock.h</input>
                                <input>main/c++/base/SemLock.h</input>
                                <input>main/c++/base/BlockMemoryBuffer.h</input>
                                <input>main/c++/base/BlockMemoryFIFO.h</input>
                                <input>main/c++/base/Buffer.h</input>
                                <input>main/c++/base/CircularBuffer.h</input>
                                <input>main/c++/base/FIFOBuffer.h</input>
                                <input>main/c++/base/HIFOBuffer.h</input>
                                <input>main/c++/base/LIFOBuffer.h</input>
                                <input>main/c++/base/Statistics.h</input>
                                <input>main/c++/base/AnyThread.h</input>
                                <!-- ccs::HelperTools namespace -->
                                <input>main/c++/tools/Base64.h</input>
                                <input>main/c++/tools/CyclicRedundancyCheck.h</input>
                                <input>main/c++/tools/Hash.h</input>
                                <input>main/c++/tools/NetTools.h</input>
                                <input>main/c++/tools/SquareRoot.h</input>
                                <input>main/c++/tools/SysTools.h</input>
                                <input>main/c++/tools/TimeTools.h</input>
                                <properties>
                                    <PREDEFINED>__cplusplus</PREDEFINED>
                                    <HIDE_UNDOC_CLASSES>NO</HIDE_UNDOC_CLASSES>
                                    <EXTRACT_ALL>YES</EXTRACT_ALL>
                                    <MACRO_EXPANSION>NO</MACRO_EXPANSION>
                                    <RECURSIVE>NO</RECURSIVE>
                                    <SHOW_FILES>YES</SHOW_FILES>
                                    <SOURCE_BROWSER>YES</SOURCE_BROWSER>
                                </properties>
                            </include>
                            <!-- Package dependencies -->
                        </package>
<!--
                        <package name="tools">
                            <include type="file" source="bin/spss-monitor" target="tests/cpp-common/tools/spss-monitor" />
                            <include type="file" source="bin/wait-until" target="tests/cpp-common/tools/wait-until" />
                        </package>
-->
                        <package name="tests">
                            <!-- Unit Test -->
                            <include type="file" source="bin/unit-tests" target="tests/${project.artifactId}/unit-tests"/>
                            <include type="file" source="bin/regression-tests" target="tests/${project.artifactId}/regression-tests"/>
                            <!-- Package dependencies -->
                            <requires version="current">%{codac_rpm_prefix}-${project.artifactId}</requires>
                            <requires version="current">gtest</requires>
                            <requires version="current" buildOnly="true">gtest-devel</requires>
                        </package>
                    </packaging>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
